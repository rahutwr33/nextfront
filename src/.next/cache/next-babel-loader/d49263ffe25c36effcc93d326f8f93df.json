{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport apiConfig from '../config/api';\nimport pathToRegExp from 'path-to-regexp';\nimport cookies from 'js-cookie';\nimport Router from 'next/router';\nimport { toast } from 'react-toastify';\naxios.interceptors.request.use(function (config) {\n  return config;\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    toast.error('UnAutorized Access!');\n    Router.push('/');\n  }\n\n  return error;\n});\n\nvar execute = function execute(path) {\n  var method,\n      _ref,\n      _ref$params,\n      params,\n      _ref$queries,\n      queries,\n      _ref$payloads,\n      payloads,\n      _ref$headers,\n      headers,\n      compiler,\n      base,\n      url,\n      token,\n      options,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function execute$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          method = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'GET';\n          _ref = _args.length > 2 && _args[2] !== undefined ? _args[2] : {}, _ref$params = _ref.params, params = _ref$params === void 0 ? {} : _ref$params, _ref$queries = _ref.queries, queries = _ref$queries === void 0 ? {} : _ref$queries, _ref$payloads = _ref.payloads, payloads = _ref$payloads === void 0 ? {} : _ref$payloads, _ref$headers = _ref.headers, headers = _ref$headers === void 0 ? {} : _ref$headers;\n          compiler = pathToRegExp.compile(path);\n          base = apiConfig.apiBaseUrl.replace(/~\\/$/, '');\n          url = compiler(params || {});\n          token = cookies.get('token');\n\n          if (token) {\n            headers['Authorization'] = \"\".concat(token); //   if(url=='/getcategories'){\n            //    }else{\n            //       headers['Authorization'] = `${ token }`;\n            //     }\n          }\n\n          if (!headers['Content-Type']) {\n            headers['Content-Type'] = 'application/json';\n          }\n\n          if (!headers['Accept']) {\n            headers['Accept'] = 'application/json';\n          }\n\n          options = {\n            method: method,\n            headers: headers\n          };\n\n          if (method === 'POST' || method === 'PATCH' || method === 'PUT') {\n            options.data = payloads;\n          }\n\n          if (url == '/profilepic' || url == \"/updatecampaign/\" || url == \"/upload-attachment\") {\n            options.headers['Content-Type'] = 'multipart/form-data';\n          }\n\n          if (queries) {\n            options.params = queries;\n          }\n\n          options.url = url;\n          options.baseURL = base;\n          console.log(options);\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(axios(options));\n\n        case 18:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default {\n  get: function get(path, options) {\n    return execute(path, 'GET', options);\n  },\n  post: function post(path, options) {\n    return execute(path, 'POST', options);\n  },\n  put: function put(path, options) {\n    return execute(path, 'PUT', options);\n  },\n  patch: function patch(path, options) {\n    return execute(path, 'PATCH', options);\n  },\n  \"delete\": function _delete(path, options) {\n    return execute(path, 'DELETE', options);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahul/Desktop/nextstarter/client/src/utils/middleware.js"],"names":["axios","apiConfig","pathToRegExp","cookies","Router","toast","interceptors","request","use","config","response","error","status","push","execute","path","method","params","queries","payloads","headers","compiler","compile","base","apiBaseUrl","replace","url","token","get","options","data","baseURL","console","log","post","put","patch"],"mappings":"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","sourcesContent":["\r\nimport axios from 'axios';\r\nimport apiConfig from '../config/api';\r\nimport pathToRegExp from 'path-to-regexp';\r\nimport cookies from 'js-cookie'\r\nimport Router from 'next/router'\r\nimport { toast } from 'react-toastify'\r\n\r\naxios.interceptors.request.use((config) => {\r\n  return config;\r\n});\r\naxios.interceptors.response.use(response => {\r\n  return response;\r\n}, error => {\r\n if (error.response.status === 401) {\r\n  toast.error('UnAutorized Access!')\r\n  Router.push('/')\r\n }\r\nreturn error;\r\n});\r\n\r\nconst execute = async (path, method = 'GET', { params = {} , queries = {}, payloads = {}, headers = {} } = {}) => {\r\n  const compiler = pathToRegExp.compile(path);\r\n  const base = apiConfig.apiBaseUrl.replace(/~\\/$/, '');\r\n  const url = compiler(params || {});\r\n  var token = cookies.get('token')\r\n  if (token) {\r\n    headers['Authorization'] = `${token}`\r\n  //   if(url=='/getcategories'){\r\n     \r\n  //    }else{\r\n  //       headers['Authorization'] = `${ token }`;\r\n  //     }\r\n   \r\n  }\r\n\r\n  if ( ! headers['Content-Type']) {\r\n    headers['Content-Type'] = 'application/json';\r\n  }\r\n\r\n  if ( ! headers['Accept']) {\r\n    headers['Accept'] = 'application/json';\r\n  }\r\n\r\n  const options = { method, headers };\r\n\r\n  if (method === 'POST' || method === 'PATCH' || method ==='PUT') {\r\n    options.data = payloads;\r\n  }\r\n\r\n  if(url=='/profilepic' || url==`/updatecampaign/` || url==`/upload-attachment`){\r\n     options.headers['Content-Type'] = 'multipart/form-data';\r\n  }\r\n\r\n  if (queries) {\r\n    options.params = queries;\r\n  }\r\n\r\n  options.url = url;\r\n  options.baseURL = base;\r\n  console.log(options)\r\n  return await axios(options);\r\n};\r\n\r\n\r\nexport default {\r\n  get: (path, options) => execute(path, 'GET', options),\r\n  post: (path, options) => execute(path, 'POST', options),\r\n  put: (path, options) => execute(path, 'PUT', options),\r\n  patch: (path, options) => execute(path, 'PATCH', options),\r\n  delete: (path, options) => execute(path, 'DELETE', options),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}